plugins {
	id 'java'
	id 'application'
	id 'idea'
	id "com.google.osdetector" version "1.4.0"
}

group 'de.thro.inf.prg3'
version '1.0-SNAPSHOT'

 sourceCompatibility = JavaVersion.VERSION_11

def platformMap = [
	osx    : 'mac',
	windows: 'win',
	linux  : 'linux'
]

ext.platform = platformMap[osdetector.os]

mainClassName = 'de.thro.inf.prg3.a07.App'

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.apache.commons:commons-lang3:$commons_lang3_version")
	implementation("org.apache.logging.log4j:log4j-api:${log4j2Version}")
	implementation("org.apache.logging.log4j:log4j-core:${log4j2Version}")

	implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
	implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
	implementation "com.squareup.retrofit2:converter-gson:${retrofit2_version}"

	implementation "org.openjfx:javafx-base:11.0.1:$platform"
	implementation "org.openjfx:javafx-graphics:11.0.1:$platform"
	implementation "org.openjfx:javafx-controls:11.0.1:$platform"
	implementation "org.openjfx:javafx-fxml:11:$platform"

	testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

compileJava {
	doFirst {
		options.compilerArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'javafx.controls',
			'--add-modules', 'javafx.fxml'
		]
	}
}

run {
	doFirst {
		jvmArgs = [
			'--module-path', classpath.asPath,
			'--add-modules', 'javafx.controls',
			'--add-modules', 'javafx.fxml'
		]
	}
}
